@model List<CakeApp.Areas.Admin.Models.Product.ProductModel>
@using CakeApp.Helper

@{
    ViewBag.Title = "ProductList";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    ViewBag.Description = "Product";
   
}
<style>
    .edit i.fa, .delete i.fa {
        margin-right: 5px;
    }

    .dataTable input[type="text"] {
        width: 100px !important;
    }
</style>
<section class="mainbody">
    <div class="container">
        <h2>Product List</h2>
        <div class="row">
            <div class="col-md-12">
                <!-- BEGIN EXAMPLE TABLE PORTLET-->
                <div class="portlet light">

                    <div class="portlet-body">
                        <div class="table-toolbar">
                            <div class="row">
                                <div data-alerts="alerts" data-fade="3000"></div>
                                @Html.CustomValidationSummary("Error")
                                <div class="col-md-6 pull-right" style="width:auto;">
                                    <div class="btn-group">
                                        <button id="sample_editable_1_new" class="btn" onclick="window.location.href = '@Url.Action("AddProduct", "Products")'">
                                            Add Prduct&nbsp;<i class="fa fa-plus"></i>
                                        </button>
                                    </div>

                                </div>

                            </div>
                        </div>
                        <table class="table table-striped table-hover table-bordered" id="prodListing">
                            <thead>
                                <tr id="filterrow">
                                    <td>Name</td>
                                    <td>Title</td>
                                    <td>Tag</td>
                                    <td>Categories</td>
                                    <td>Groups</td>
                                    <td>Priority</td>
                                    <td style="text-align:center;">Status</td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Name</th>
                                    <th>Title</th>
                                    <th>Tag</th>
                                    <th>Categories</th>
                                    <th>Groups</th>
                                    <th>Priority</th>
                                    <th style="text-align:center;">Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Count > 0)
                                {
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                <input type="hidden" value="@item.ProductID" class="infoid" />
                                                @Html.Label("", item.ProductName, new { @class = "infoname" })
                                            </td>
                                            <td>
                                                @Html.Label("", @item.Title, new { @class = "title" })
                                            </td>
                                            <td>
                                                <input type="hidden" value="@item.TagID" class="tagid" />
                                                @Html.Label("", @item.TagName, new { @class = "title" })
                                            </td>
                                           
                                            <td>
                                                
                                                @Html.Label("", item.CategoryNames, new { @class = "group" })

                                            </td>
                                            <td>
                                                <input type="hidden" value="@item.GroupID" class="tagid" />
                                                @Html.Label("", @item.GroupName, new { @class = "title" })
                                            </td>
                                            <td>
                                                @Html.Label("", item.Priority.ToString(), new { @class = "priority" })
                                            </td>
                                            <td align="center">
                                                @if (item.Status == "Enable")
                                                {
                                                    <i class="fa fa-check status" data-value="@item.Status" data-search="@item.Status"></i><span style="text-indent: -9999px; display: block;">@item.Status</span>
                                                }
                                                else
                                                {
                                                    <i class="fa fa-close status" data-value="@item.Status" data-search="@item.Status"></i><span style="text-indent: -9999px; display: block;">@item.Status</span>
                                                }

                                            </td>

                                            <td>
                                                <input type="hidden" id="hdnInfo" value="@item.ProductID">
                                                <a class="edit btn btn-default " href='@Url.Action("EditProduct", "Products", new { @id = @item.ProductID })'>
                                                    <i class="fa fa-edit"></i>Edit
                                                </a>
                                                <a class="delete btn btn-default" href="javascript:void(0);" data-value="@item.ProductID">
                                                    <i class="fa fa-close"></i> &nbsp;Delete
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <!-- END EXAMPLE TABLE PORTLET-->
            </div>
        </div>
    </div>
</section>

<script>

    var TableEditable = function () {

        var handleTable = function () {
           
            function restoreRow(oTable, nRow) {
                var aData = oTable.fnGetData(nRow);
                var jqTds = $('>td', nRow);

                for (var i = 0, iLen = jqTds.length; i < iLen; i++) {
                    oTable.fnUpdate(aData[i], nRow, i, false);
                }

                oTable.fnDraw();
            }



            var table = $('#prodListing');

            var count = 0;

            $('#prodListing').find("thead>tr").eq(0).find("td").each(function () {
              
                if (count < ($('#prodListing thead  td').length - 1)) {
                    var title = $('#prodListing thead th').eq($(this).index()).text();

                    if ($(this).index() == 6) {
                        $(this).html('<input type="radio"  class="form-control input-small radio_left status" name="rd" value="Enable"><span class="text-lext">Enable</span> <input type="radio" class="form-control input-small radio_left status" value="Disable" name="rd" > <span class="text-lext">Disable</span>');
                    }

                    else {
                        $(this).html('<input id="' + count + '" type="text" placeholder="Search ' + title + '" class="form-control input-inline" />');
                    }
                    count++;
                }
            });


            var oTable = table.dataTable({

                // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                // So when dropdowns used the scrollable div should be removed.
                //"dom": "<'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",

                "lengthMenu": [
                    [5, 15, 20, -1],
                    [5, 15, 20, "All"] // change per page values here
                ],

                // Or you can use remote translation file
                //"language": {
                //   url: '//cdn.datatables.net/plug-ins/3cfcc339e89/i18n/Portuguese.json'
                //},

                // set the initial value
                "pageLength": 10,

                "language": {
                    "lengthMenu": " _MENU_ records"
                },
                "columnDefs": [{ // set default column settings
                    'orderable': true,
                    'targets': [0]
                }, {
                    "searchable": true,
                    "targets": [0]
                }],
                "order": [
                    [5, "asc"]
                ] // set first column as a default sort by asc
            });


            var tab = $('#prodListing').DataTable();
            $("#prodListing thead input").bind('keyup change', function () {

                tab
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();
            });


            $("#prodListing thead input[type='radio']").bind('click', function () {
                console.log(this.value);
                console.log($(this).parent().index());
                var reg = this.value;
                //tab.search(this.value, true, true, true).draw();
                tab
                    .column($(this).parent().index())
                    .search(reg, true, true, true)
                    .draw();
            });


            var tableWrapper = $("#sample_editable_1_wrapper");

            tableWrapper.find(".dataTables_length select").select2({
                showSearchInput: false //hide search box with special css class
            }); // initialize select2 dropdown

            var nEditing = null;
            var nNew = false;

            //$('#sample_editable_1_new').click(function (e) {
            //    e.preventDefault();

            //    if (nNew && nEditing) {
            //        if (confirm("Previose row not saved. Do you want to save it ?")) {
            //            saveRow(oTable, nEditing); // save
            //            $(nEditing).find("td:first").html("Untitled");
            //            nEditing = null;
            //            nNew = false;

            //        } else {
            //            oTable.fnDeleteRow(nEditing); // cancel
            //            nEditing = null;
            //            nNew = false;

            //            return;
            //        }
            //    }

            //    var aiNew = oTable.fnAddData(['', '', '', '', '', '']);
            //    var nRow = oTable.fnGetNodes(aiNew[0]);
            //    editRow(oTable, nRow);
            //    nEditing = nRow;
            //    nNew = true;
            //});

            table.on('click', '.delete', function (e) {
                e.preventDefault();

                if (confirm("Are you sure to delete this row ?") == false) {
                    return;
                }

                var ProductID = $(this).data('value');
                var nRow = $(this).parents('tr')[0];
                console.log(ProductID);

                $.ajax({
                    type: "POST",
                    datatype: 'json',
                    data: { id: ProductID },
                    url: '@Url.Action("DeleteProduct", "Products")',
                    success: function (result) {

                        if (result == "true") {

                            oTable.fnDeleteRow(nRow);
                            $(document).trigger("add-alerts", {
                                message: "Deleted successfully",
                                priority: "success"
                            });
                        }
                        else {
                            $(document).trigger("add-alerts", {
                                message: result,
                                priority: "error"
                            });

                        }

                    },
                    error: function (err) {
                        $(document).trigger("add-alerts", {
                            message: err,
                            priority: "error"
                        });
                    }

                });
            });
        }

        return {

            //main function to initiate the module
            init: function () {
                handleTable();
            }

        };

    }();
    jQuery(document).ready(function () {

        TableEditable.init();
    });
</script>
