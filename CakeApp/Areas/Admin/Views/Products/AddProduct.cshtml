@model CakeApp.Areas.Admin.Models.Product.ProductModel
@using CakeApp.Helper

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    ViewBag.Description = "Product";
    ViewBag.href = "/admin/Products/ProductList";
    ViewBag.SubDescription = "Add Product";
}

<section class="mainbody">
    <div class="container edit_product">
        <h2>Product</h2>
        <div class="row">
            <div class="col-md-12">
                @Html.CustomValidationSummary("Error")
            </div>
        </div>

        @*<ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active"><a href="#product" aria-controls="Product" role="tab" data-toggle="tab">Product</a></li>
                <li role="presentation"><a href="#image" aria-controls="Image" role="tab" >Image</a></li>
            </ul>*@
        @*<div class="tab-content">*@
        @*<div role="tabpanel" class="tab-pane active" id="product">*@
        <div class="row">
            <div class="col-md-12">
                @using (Html.BeginForm("AddProduct", "Products", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form", novalidate = "novalidate", @class = "form-horizontal", @enctype = "multipart/form-data", @id = "addForm" }))
                {
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Name</label>
                        <div class="col-sm-5">

                            @Html.TextBoxFor(c => c.ProductName, new { @class = "form-control", @placeholder = "Name" })
                            @Html.ValidationMessageFor(m => m.ProductName)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label">Title</label>
                        <div class="col-sm-5">

                            @Html.TextBoxFor(c => c.Title, new { @class = "form-control", @placeholder = "Title" })
                            @Html.ValidationMessageFor(m => m.Title)
                        </div>
                    </div>

                    @*<div class="form-group">
                                <label for="inputPassword" class="col-sm-2 control-label">Image</label>
                                <div class="col-sm-5">
                                    <input id="file-0a" class="file" type="file" name="file" >
                                    @Html.HiddenFor(m => m.ImageName, new { @id = "hdnImageName" })
                                </div>
                        </div>*@
                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label">Tag</label>
                        <div class="col-sm-5">

                            @Html.DropDownList("TagID", new SelectList(Model.TagList, "TagID", "TagName"), "--Select--", new { @class = "form-control", @id = "ddlMakes" })
                            @Html.ValidationMessageFor(m => m.TagID)
                        </div>
                    </div>



                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label">Categories</label>
                        @Html.HiddenFor(a => a.CategoryIDs, new { @id = "hdnCategoryIDs" })
                        @Html.HiddenFor(a => a.InfoIDs, new { @id = "hdnInfoIDs" })
                        @Html.HiddenFor(a => a.SizeIDs, new { @id = "hdnSizeIDs" })


                        <div class="col-sm-5" id="more_cat_category">
                            <div class="row clone_row_category">
                                <div class="col-sm-8">
                                    @*@Html.DropDownList("CategoryID", new SelectList(Model.CategoryList, "CategoryID", "CategoryName"), "--Select--", new { @class = "form-control categorylist", @id = "ddlcategories_1", @onchange = "InsertCategoryId(this)" })
                                        @Html.ValidationMessageFor(m => m.CategoryID)*@

                                    @if (Model.CategoryList != null && Model.CategoryList.Count > 0)
                                    {
                                        foreach (var item in Model.CategoryList)
                                        {
                                            <div class="checkbox">
                                                <label><input type="checkbox" value="@item.CategoryID" class="categorylist">@item.CategoryName </label>
                                               
                                            </div>
                                        }
                                    }


                                </div>
                                @*<div class="col-sm-3">
                                    <button style="" class="btn btn-danger delete_more_category" type="button" onclick="DeleteRowCategory(this)"><i class="fa fa-minus-circle"></i></button>

                                    <button class="btn btn-warning add_more_category" type="button" onclick="AddRowCategory(this)"><i class="fa fa-plus-circle"></i></button>
                                </div>*@
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label">Image</label>
                        <div class="col-sm-4">
                            <input id="file-0a" class="file" type="file" name="file">
                            @*@Html.ValidationMessageFor(m => m.ImageName)*@
                            @Html.HiddenFor(m => m.ImageName, new { @id = "hdnImageName" })
                        </div>
                    </div>


                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label ">Priority</label>
                        <div class="col-sm-1">
                            @Html.TextBoxFor(c => c.Priority, new { @class = "form-control input-sm number", @placeholder = "Priority", @type = "number", @step = "10" })
                            @Html.ValidationMessageFor(m => m.Priority)
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label">Group</label>
                        <div class="col-sm-5">

                            @Html.DropDownList("GroupID", new SelectList(Model.GroupList, "GroupID", "GroupName"), "--Select--", new { @class = "form-control", @id = "ddlGroups" })
                            @Html.ValidationMessageFor(m => m.GroupID)
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label">Info:</label>
                        <div class="col-sm-10" id="divInfo" style="display:none;">

                        </div>
                    </div>

                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label">Sizes</label>
                        <div class="col-sm-6" id="divSize" style="display:none;">

                        </div>
                        @*<div class="col-sm-3" id="divPrice" style="display:none;">
                                @*<input type="text" class="form-control" id="size_price" placeholder="" value="" style="display:none;">
                            </div>*@
                    </div>


                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label">Additional info</label>
                        @*<div class="col-sm-5">

                                @Html.TextAreaFor(c => c.AdditionalInfo, new { @class = "form-control", @placeholder = "Additional Information", @rows = "10", @cols = "40" })
                                @Html.ValidationMessageFor(m => m.AdditionalInfo)
                            </div>*@
                        <div class="checkbox ">
                            <label>
                                @Html.CheckBoxFor(m => m.statusAdditionalInfo, new { @class = "statusAdditionalInfo" })

                            </label>
                        </div>

                    </div>

                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label">Instructions</label>
                        @*<div class="col-sm-5">

                                @Html.TextAreaFor(c => c.Instructions, new { @class = "form-control", @placeholder = "Instructions", @rows = "10", @cols = "40" })
                                @Html.ValidationMessageFor(m => m.Instructions)
                            </div>*@
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(m => m.statusInstructions, new { @class = "statusInstructions" })
                            </label>
                        </div>

                    </div>




                    <div class="form-group">
                        <label for="inputPassword" class="col-sm-2 control-label">Status</label>
                        <div class="col-sm-5">
                            <label class="checkbox-inline">
                                @Html.RadioButtonFor(g => g.Status, "1", new { @name = "rad", @checked = "true" }) Enable


                            </label>
                            <label class="checkbox-inline">

                                @Html.RadioButtonFor(g => g.Status, "0", new { @name = "rad" })Disable
                            </label>
                        </div>
                    </div>

                    <div class="form-actions col-md-offset-2 margin-bottom-15">
                        <button type="button" class="btn btn-primary add" id="btnAdd" onclick="SubmitForm()">Save changes</button>
                        <button type="button" class="btn btn-danger" id="btnCancel">Cancel</button>
                        @Html.HiddenFor(m => m.ProductID, new { @id = "hdnProdductID" })
                    </div>
                }
            </div>
        </div>
        @*</div>*@


        @*</div>*@
    </div>
</section>

<script>

    //    function LoadProductImageList() {
    //        var id = "35";
    //        $('#productimagelist').dataTable({
    //            "bServerSide": true,
    //            "sAjaxSource": "/Products/ImageList/" + "38",
    //            'columns': [
    //{ "data": "ImageName" },
    //{ "data": "ImageTitle" },
    //{ "data": "ImageAlt" },
    //{ "data": "ImagePriority" },
    //{ "data": "ImageStatus" }
    //            ]
    //        });

    //        $('#productimagelist').ajax.reload();

    //    }

    //$('#product').click(function () {
    //    $("#image").prop('disabled', true);


    //});

    $('#btnCancel').click(function () {

        console.log("...............");
        $('#addForm').trigger("reset");
        var GroupID = $("#ddlGroups").val();
        console.log($("#ddlGroups").val())
        if (GroupID == "") {
            $('#divInfo').html("");
            $('#divSize').html("");

        }


    });




    var groupids = "";
    function AddImage() {
        $("#img-add").show();
        $("#divImage").hide();
        $("#btnImageAdd").hide();

    }
    function InsertCategoryId(that) {
        var flag = false;
        if ($(".categorylist").length > 1) {
            $(".categorylist").each(function () {
                if ($(that).val() == $(this).val() && $(this).attr("id") != $(that).attr("id")) {
                    flag = true;
                    return false;
                }
            });
        }
        if (flag) {
            alert($(that).children("option:selected").text() + " was already added.")
            $(that).val("");
        }

    }

    function AddRowCategory(that) {
        var row = $(".clone_row_category:last-child");
        var thisRow = $(".clone_row_category:last-child").clone().appendTo('#more_cat_category');
        var lastDDlId = $(row).find("select").attr("id").split('_')[1];
        $(thisRow).find("select").attr("id", "ddlcategories_" + parseInt(parseInt(lastDDlId) + 1));

    }


    function DeleteRowCategory(that) {
        if ($(".categorylist").length > 1)
            $(that).parent().parent().remove();
    }


    var SubmitForm = function () {

        var value = "";
        var infovalue = "";
        var sizevalue = "";
        var statadditionalinfovalue = "";
        var statinstructionsvalue = "";

        //$("#hdnCategoryIDs").val("");
        //$(".categorylist").each(function () {
        //    if ($(this).val())
        //        value += $(this).val() + ",";
        //});
        //$("#hdnCategoryIDs").val(value);

        $("#hdnCategoryIDs").val("");
        $(".categorylist").each(function () {
            if ($(this).is(":checked"))
                value += $(this).val() + ",";
        });
        $("#hdnCategoryIDs").val(value);



        $("#hdnInfoIDs").val("");
        $(".infoList").each(function () {
            if ($(this).is(":checked"))
                infovalue += $(this).val() + ",";
        });
        $("#hdnInfoIDs").val(infovalue);


        $("#hdnSizeIDs").val("");
        $(".size").each(function () {
            if ($(this).is(":checked")) {
                var price = $(this).parent().parent().find(".price").val();
                console.log(price);
                sizevalue += $(this).val() + "|" + price + ",";
            }
        });
        $("#hdnSizeIDs").val(sizevalue);


        if ($("#file-0a").val()) {
            $("#hdnImageName").val("1");
        }

        if ($('#addForm').valid()) {
            //$("#addForm").ajaxSubmit({
            //    success: function (data) {
            //        console.log(data)
            //        $('.nav-tabs a[href="#image"]').tab('show');
            //        $('#addForm').trigger("reset")

            //        var GroupID = $("#ddlGroups").val();
            //        console.log(GroupID)
            //        if (GroupID == "")
            //        {
            //            $('#divInfo').html("");
            //            $('#divSize').html("");

            //        }

            //    }

            //});
            $("#addForm").submit();
        }
        //$("#addForm").submit();
    }

    $('#ddlGroups').change(function () {
        if ($("#ddlGroups").val() != "") {
            var GroupID = $("#ddlGroups").val();

            var htmlinfo = "";
            var htmlsize = "";
            $.ajax({
                type: "GET",
                datatype: 'json',
                data: { id: GroupID },
                url: '@Url.Action("GetInfosAndSizes", "Products")',
                success: function (result) {
                    $('.price').remove();
                    $.each(result.InfoList, function (index, value) {
                        htmlinfo += '<div class="checkbox"><label><input type="checkbox" value="' + value.InfoID + '" class="infoList"> ' + value.InfoName + '</label></div>';
                    });
                    $('#divInfo').html(htmlinfo);
                    $('#divInfo').show();


                    $.each(result.SizeList, function (index, value) {
                        htmlsize += '<div class="checkbox"><label style="width:100px"><input type="checkbox" value="' + value.SizeID + '"  class="size"> ' + value.Size + '</label>';
                        htmlsize += '<input type="text" class="price col-md-offset-2" id="size_price" placeholder="Price" value=""></div>';

                    });

                    $('#divSize').html(htmlsize);
                    $('#divSize').show();

                    //$('#divPrice > div').map(function () {
                    //    console.log(this.id);
                    //});


                },
                error: function (err) {
                    $(document).trigger("add-alerts", {
                        message: err,
                        priority: "error"
                    });
                }

            });


        }
        else {

            $('#divInfo').html("");
            $('#divSize').html("");

        }

    });


    //function ShowtxtPrice(that) {
    //    var htmlprice = "";

    //    if ($(that).prop('checked')) {
    //        htmlprice += '<input type="text" class="price col-md-offset-2" id="size_price" placeholder="Price" value="">';

    //        $(that).parent().parent().append(htmlprice);


    //    }
    //    else {

    //        $('.price').remove();
    //        //$('#divPrice').hide();
    //    }

    //}


    //var SubmitFormImage = function () {
    //    if ($("#file-0a").val()) {
    //        $("#hdnImageName").val("1");

    //    }
    //    // console.log($(that).val())


    //    if ($('#addFormImage').valid()) {
    //        $("#addFormImage").ajaxSubmit({
    //            success: function (data) {
    //                //$('.nav-tabs a[href="#image"]').tab('show');
    //                console.log("imageproduct")
    //                $('#divImage').show();
    //                $('#img-add').hide();

    //                LoadProductImageList();

    //                $('#addFormImage').trigger("reset")



    //            }
    //        });

    //    }



    //}


</script>
